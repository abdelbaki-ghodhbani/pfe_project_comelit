#include <stdio.h>
#include <string.h>
#include "esp82xx_driver.h"
#include "circular_buffer.h"



extern portType esp82xx_port;
extern portType debug_port;


static void esp82xx_reset(void);
static void esp82xx_startup_test(void);
static  void esp82xx_sta_mode(void);
//static  void esp82xx_ap_connect(char *ssid, char *password);
//static void esp82xx_get_local_ip(void);
//static void esp82xx_multi_conn_en(void);
//static void esp82xx_create_tcp_server(void);


void esp82xx_sever_init(void)
{
	circular_buffer_init();
	esp82xx_reset();
	esp82xx_startup_test();
	esp82xx_sta_mode();
	//esp82xx_ap_connect(ssid,password);
	//esp82xx_get_local_ip();
	//esp82xx_multi_conn_en();
	//esp82xx_create_tcp_server();




}
/*Reset esp82xx*/

 static void esp82xx_reset(void)
{
	/*Send reset command*/
	buffer_send_string("AT+RST\r\n",esp82xx_port);

	/*Delay for 1 second*/
	systick_delay_ms(1000);

	/*Wait for "OK" response*/
	while(! (is_response("OK\r\n"))){}

	buffer_send_string("Reset was successful...\n\r",debug_port);
}


 /*Test AT startup*/
 static void esp82xx_startup_test(void)
 {
	 /*Clear esp uart buffer*/
	 buffer_clear(esp82xx_port);

	 /*Send test command*/
	buffer_send_string("AT\r\n",esp82xx_port);



     /*Wait for "OK" response*/
	while(! (is_response("OK\r\n"))){}

	buffer_send_string("AT Startup test successful...\n\r",debug_port);

}

 /*Enable station mode*/
 static  void esp82xx_sta_mode(void)
 {
	 /*Clear esp uart buffer*/
	 buffer_clear(esp82xx_port);

	 /*Send STA command*/
	buffer_send_string("AT+CWMODE=1\r\n",esp82xx_port);

    /*Wait for "OK" response*/
	while(! (is_response("OK\r\n"))){}

	buffer_send_string("STA Mode set successfully...\n\r",debug_port);

 }




void USART1_IRQHandler(void)
{
	esp82_uart_callback();
}


void USART2_IRQHandler(void)
{
	debug_uart_callback();
}

